/**
 * crypto-modal.js - JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –¥–µ—Ç–∞–ª–µ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
function showCoinDetails(coinId) {
    const modal = document.getElementById('cryptoModal');
    const modalContent = document.getElementById('cryptoModalContent');
    const modalLoading = document.getElementById('cryptoModalLoading');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    modalLoading.style.display = 'flex';

    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.style.overflow = 'hidden';

    // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalContent.innerHTML = "";

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = 'block';

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–æ–Ω–µ—Ç–µ
    fetch(`/coin_details/${coinId}`)
        .then(response => {
            if (!response.ok) {
                throw new Error(`Server error: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            if (data.error) {
                throw new Error(data.error);
            }

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
            let mcMln = data.market_cap ? (data.market_cap / 1e6).toFixed(2) : "N/A";
            let rank = data.market_cap_rank || "N/A";
            let volMln = data.total_volume_usd ? (data.total_volume_usd / 1e6).toFixed(2) : "N/A";
            let cPrice = data.current_price_usd ? parseFloat(data.current_price_usd).toFixed(data.current_price_usd < 1 ? 4 : 2) : "N/A";

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
            let h1Change = data.percent_change_1h ? parseFloat(data.percent_change_1h).toFixed(2) : "N/A";
            let h24Change = data.price_change_percentage_24h ? parseFloat(data.price_change_percentage_24h).toFixed(2) : "N/A";
            let d7Change = data.percent_change_7d ? parseFloat(data.percent_change_7d).toFixed(2) : "N/A";
            let d30Change = data.percent_change_30d ? parseFloat(data.percent_change_30d).toFixed(2) : "N/A";
            let d60Change = data.percent_change_60d ? parseFloat(data.percent_change_60d).toFixed(2) : "N/A";
            let d90Change = data.percent_change_90d ? parseFloat(data.percent_change_90d).toFixed(2) : "N/A";

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∑–∞–ø—É—Å–∫–∞
            let launchDate = data.date_added ? new Date(data.date_added).toLocaleDateString() : "N/A";

            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö
            let circulatingSupply = data.circulating_supply ? formatNumber(data.circulating_supply) : "N/A";
            let totalSupply = data.total_supply ? formatNumber(data.total_supply) : "N/A";

            // –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
            let max365 = data.max_365d_price ? parseFloat(data.max_365d_price).toFixed(4) : "N/A";
            let max365Date = data.max_365d_date ? new Date(data.max_365d_date).toLocaleDateString() : "N/A";
            let min365 = data.min_365d_price ? parseFloat(data.min_365d_price).toFixed(4) : "N/A";
            let min365Date = data.min_365d_date ? new Date(data.min_365d_date).toLocaleDateString() : "N/A";

            // –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            let html = `
                <div id="cryptoModalHeader">
                    <h3>${data.name} <span class="coin-symbol">${data.symbol.toUpperCase()}</span></h3>
                    <button id="cryptoModalClose">√ó</button>
                </div>
                <div id="cryptoModalBody">
                    <!-- –°–µ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–±–µ–∑ 24h Change) -->
                    <div class="coin-stats-grid">
                        <div class="stat-card">
                            <div class="stat-label">Price</div>
                            <div class="stat-value">$${cPrice}</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">Market Cap</div>
                            <div class="stat-value">$${mcMln}M</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">Rank</div>
                            <div class="stat-value">#${rank}</div>
                        </div>
                    </div>
                    
                    <!-- –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è Market Cap) -->
                    <div class="coin-section">
                        <div class="section-header">
                            <span style="margin-right: 10px;">‚ÑπÔ∏è</span>
                            <h3>Coin Information</h3>
                        </div>
                        <div class="section-content">
                            <table style="width: 100%; border-collapse: collapse;">
                                <tr>
                                    <td style="padding: 8px 0; width: 30%; font-weight: 600;">–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞:</td>
                                    <td style="padding: 8px 0;">${launchDate}</td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0; font-weight: 600;">Supply:</td>
                                    <td style="padding: 8px 0;">${circulatingSupply} (${totalSupply})</td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0; font-weight: 600;">Volume 24h:</td>
                                    <td style="padding: 8px 0;">$${volMln}M</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    
                    <!-- –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω —Å 6 –ø–µ—Ä–∏–æ–¥–∞–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π -->
                    <div class="coin-section">
                        <div class="section-header">
                            <span style="margin-right: 10px;">üìà</span>
                            <h3>365-Day Range</h3>
                        </div>
                        <div class="section-content">
                            <div class="price-range">
                                <div>
                                    <div>$${min365}</div>
                                    <div class="range-date">${min365Date}</div>
                                </div>
                                <div>
                                    <div>$${max365}</div>
                                    <div class="range-date">${max365Date}</div>
                                </div>
                            </div>
                            
                            <div class="price-slider">
                                ${calculatePriceRange(data.min_365d_price, data.max_365d_price, data.current_price_usd)}
                            </div>
                            
                            <div class="data-grid" style="margin-top: 25px;">
                                <div class="data-item">
                                    <div class="data-label">1h Change</div>
                                    <div class="data-value ${parseFloat(h1Change) > 0 ? 'positive-change' : parseFloat(h1Change) < 0 ? 'negative-change' : ''}">${h1Change}%</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-label">24h Change</div>
                                    <div class="data-value ${parseFloat(h24Change) > 0 ? 'positive-change' : parseFloat(h24Change) < 0 ? 'negative-change' : ''}">${h24Change}%</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-label">7d Change</div>
                                    <div class="data-value ${parseFloat(d7Change) > 0 ? 'positive-change' : parseFloat(d7Change) < 0 ? 'negative-change' : ''}">${d7Change}%</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-label">30d Change</div>
                                    <div class="data-value ${parseFloat(d30Change) > 0 ? 'positive-change' : parseFloat(d30Change) < 0 ? 'negative-change' : ''}">${d30Change}%</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-label">60d Change</div>
                                    <div class="data-value ${parseFloat(d60Change) > 0 ? 'positive-change' : parseFloat(d60Change) < 0 ? 'negative-change' : ''}">${d60Change}%</div>
                                </div>
                                <div class="data-item">
                                    <div class="data-label">90d Change</div>
                                    <div class="data-value ${parseFloat(d90Change) > 0 ? 'positive-change' : parseFloat(d90Change) < 0 ? 'negative-change' : ''}">${d90Change}%</div>
                                </div>
                            </div>
                        </div>
                    </div>`;

            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
            if (data.AI_text && !data.gemini_invest) {
                html += `
                    <!-- –†–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ -->
                    <div class="coin-section">
                        <div class="section-header">
                            <span style="margin-right: 10px;">üß†</span>
                            <h3>AI Analytics</h3>
                        </div>
                        <div class="section-content analytics-content">
                            ${formatAnalyticsContent(data.AI_text)}
                        </div>
                    </div>`;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
            if (data.AI_invest && !data.gemini_invest) {
                html += `
                    <!-- –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ -->
                    <div class="coin-section">
                        <div class="section-header">
                            <span style="margin-right: 10px;">üí∞</span>
                            <h3>Investment Analysis</h3>
                        </div>
                        <div class="section-content analytics-content">
                            ${formatAnalyticsContent(data.AI_invest)}
                        </div>
                    </div>`;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
            if (data.gemini_invest) {
                html += `
                    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ -->
                    <div class="coin-section">
                        <div class="section-header">
                            <span style="margin-right: 10px;">üìä</span>
                            <h3>Additional Investment Analysis</h3>
                        </div>
                        <div class="section-content analytics-content">
                            ${formatAnalyticsContent(data.gemini_invest)}
                        </div>
                    </div>`;
            }

            html += `</div>`; // –ó–∞–∫—Ä—ã–≤–∞–µ–º modal-body

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            modalContent.innerHTML = html;

            // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            modalLoading.style.display = 'none';

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
            document.getElementById('cryptoModalClose').addEventListener('click', closeCryptoModal);
        })
        .catch(err => {
            console.error("Error loading coin details:", err);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            modalContent.innerHTML = `
                <div id="cryptoModalHeader">
                    <h3>Error</h3>
                    <button id="cryptoModalClose">√ó</button>
                </div>
                <div id="cryptoModalBody" style="text-align: center; padding: 40px 20px;">
                    <div style="font-size: 50px; margin-bottom: 20px;">‚ö†Ô∏è</div>
                    <p style="font-size: 18px; color: #e74c3c;">${err.message}</p>
                    <button style="padding: 10px 20px; background-color: #e74c3c; color: white; border: none; border-radius: 5px; cursor: pointer; margin-top: 20px;" onclick="closeCryptoModal()">Close</button>
                </div>
            `;

            // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            modalLoading.style.display = 'none';

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
            document.getElementById('cryptoModalClose').addEventListener('click', closeCryptoModal);
        });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function calculatePriceRange(minPrice, maxPrice, currentPrice) {
    if (!minPrice || !maxPrice || !currentPrice) {
        return `
            <div class="price-slider-fill" style="width: 0%"></div>
            <div class="price-slider-handle" style="left: 0%"></div>
        `;
    }

    const min = parseFloat(minPrice);
    const max = parseFloat(maxPrice);
    const current = parseFloat(currentPrice);

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
    let position = 0;
    if (max > min) {
        position = ((current - min) / (max - min)) * 100;
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 0 –¥–æ 100
        position = Math.max(0, Math.min(100, position));
    }

    return `
        <div class="price-slider-fill" style="width: ${position}%"></div>
        <div class="price-slider-handle" style="left: ${position}%"></div>
    `;
}

function formatAnalyticsContent(content) {
    if (!content) return '<p>No data available</p>';

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    let formatted = content
        .replace(/###\s*(.*?)\n/g, '<h4>$1</h4>')
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        .replace(/\n\n/g, '</p><p>')
        .replace(/\n/g, '<br>');

    // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ —Ç–µ–≥–∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    if (!formatted.startsWith('<p>')) {
        formatted = '<p>' + formatted;
    }
    if (!formatted.endsWith('</p>')) {
        formatted = formatted + '</p>';
    }

    // –û—á–∏—â–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞–º–∏
    formatted = formatted.replace(/<p><\/p>/g, '');

    return formatted;
}

function formatNumber(num) {
    if (num === null || num === undefined) return "N/A";

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—É—á–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏
    if (num > 1e9) {
        return (num / 1e9).toFixed(2) + "B";
    } else if (num > 1e6) {
        return (num / 1e6).toFixed(2) + "M";
    } else if (num > 1e3) {
        return (num / 1e3).toFixed(2) + "K";
    }

    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeCryptoModal() {
    const modal = document.getElementById('cryptoModal');
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = ''; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log("DOM fully loaded, setting up crypto modal"); // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.getElementById('cryptoModal');
    if (!modal) {
        console.error("Modal element #cryptoModal not found in DOM");
        return;
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∞–≤–∏—à–µ ESC
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeCryptoModal();
        }
    });

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', function(event) {
        if (event.target === this) {
            closeCryptoModal();
        }
    });

    console.log("Crypto modal setup completed");
});