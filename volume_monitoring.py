import os
import time
import traceback
from datetime import datetime
import requests
import mysql.connector as mc
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î
MYSQL_HOST = os.getenv("MYSQL_HOST", "localhost")
MYSQL_USER = os.getenv("MYSQL_USER", "root")
MYSQL_PASSWORD = os.getenv("MYSQL_PASSWORD", "password")
MYSQL_DB = os.getenv("MYSQL_DATABASE", "crypto_db")

db_config = {
    "host": MYSQL_HOST,
    "user": MYSQL_USER,
    "password": MYSQL_PASSWORD,
    "database": MYSQL_DB
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Telegram
BOT_TOKEN = os.getenv("MY_TELEGRAM_BOT_TOKEN", "")
CHAT_ID = int(os.getenv("MY_TELEGRAM_CHAT_ID", "0"))  # –Ω–∞–ø—Ä–∏–º–µ—Ä, 123456789

def send_telegram_message(text: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ text –≤ Telegram-—á–∞—Ç CHAT_ID, –∏—Å–ø–æ–ª—å–∑—É—è BOT_TOKEN."""
    if not BOT_TOKEN or CHAT_ID == 0:
        print("[WARN] –ù–µ –∑–∞–¥–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ chat_id ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É.")
        return

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    params = {
        "chat_id": CHAT_ID,
        "text": text
    }

    try:
        resp = requests.get(url, params=params)
        resp.raise_for_status()
        print(f"[INFO] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {text}")
    except Exception as e:
        print(f"[ERROR] Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {e}")

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
CHECK_INTERVAL = 6         # –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ (—Å–µ–∫)
MARKET_CAP_RANK_MIN = 1
MARKET_CAP_RANK_MAX = 9999
VOLUME_MIN = 10000
GROWTH_THRESHOLD = 100.0

def main():
    # –•—Ä–∞–Ω–∏–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏
    last_dt = datetime(1970, 1, 1)
    # –§–ª–∞–≥, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    first_connection = True

    while True:
        try:
            conn = mc.connect(**db_config)
            cursor = conn.cursor(dictionary=True)

            if first_connection:
                print("[INFO] –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –±–∞–∑–µ.")
                send_telegram_message("–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö! –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—ä—ë–º–∞.")
                first_connection = False

            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –ø–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º—É market_cap_rank
            query_new = """
                SELECT ch.coin_id,
                       ch.volume AS new_volume,
                       ch.price,
                       ch.history_date_time,
                       cg.name AS coin_name,
                       cg.symbol AS coin_symbol,
                       cg.market_cap_rank
                FROM coin_volume_history AS ch
                JOIN coin_gesco_coins AS cg ON cg.id = ch.coin_id
                WHERE ch.history_date_time > %s
                  AND cg.market_cap_rank BETWEEN %s AND %s
                ORDER BY ch.history_date_time ASC
            """
            cursor.execute(query_new, (last_dt, MARKET_CAP_RANK_MIN, MARKET_CAP_RANK_MAX))
            new_rows = cursor.fetchall()

            for row in new_rows:
                coin_id = row["coin_id"]
                coin_name = row["coin_name"]
                coin_symbol = row["coin_symbol"]
                new_volume = row["new_volume"]
                new_dt = row["history_date_time"]

                if new_volume and new_volume > VOLUME_MIN:
                    # –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–ø–∏—Å—å
                    prev_query = """
                        SELECT volume
                        FROM coin_volume_history
                        WHERE coin_id = %s
                          AND history_date_time < %s
                        ORDER BY history_date_time DESC
                        LIMIT 1
                    """
                    cursor.execute(prev_query, (coin_id, new_dt))
                    prev_row = cursor.fetchone()

                    if prev_row:
                        old_volume = prev_row["volume"]
                        if old_volume and old_volume > VOLUME_MIN:
                            change_pct = ((new_volume - old_volume) / old_volume) * 100
                            if change_pct > GROWTH_THRESHOLD:
                                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ coingesco, –ø–æ–¥—Å—Ç–∞–≤–ª—è—è coin_id
                                coin_url = f"https://coingecko.com/coins/{coin_id}"
                                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–æ–∫ ¬´üöÄ¬ª
                                msg = (
                                    f"üöÄ  {coin_name} ({coin_symbol}): –æ–±—ä—ë–º –≤—ã—Ä–æ—Å –Ω–∞ "
                                    f"{change_pct:.2f}% (—Å—Ç–∞—Ä—ã–π={old_volume}, –Ω–æ–≤—ã–π={new_volume})\n"
                                    f"–°—Å—ã–ª–∫–∞: {coin_url}"
                                )
                                print(msg)
                                send_telegram_message(msg)

                # –û–±–Ω–æ–≤–ª—è–µ–º last_dt
                if new_dt > last_dt:
                    last_dt = new_dt

            cursor.close()
            conn.close()

        except Exception:
            print("[ERROR] –û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
            print(traceback.format_exc())

        # –ñ–¥—ë–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()