import os
import requests
import mysql.connector
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
load_dotenv()

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è) ---
BOT_TOKEN = os.getenv("MY_TELEGRAM_BOT_TOKEN", "")
CHAT_ID = os.getenv("MY_TELEGRAM_CHAT_ID", "")  # —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ int

def send_telegram_message(text: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ 'text' –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π Telegram-—á–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É—è BOT_TOKEN."""
    if not BOT_TOKEN or not CHAT_ID:
        print("[WARN] –ù–µ –∑–∞–¥–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–ª–∏ chat_id ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É.")
        return

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    params = {"chat_id": CHAT_ID, "text": text}

    try:
        resp = requests.get(url, params=params)
        resp.raise_for_status()
        print(f"[INFO] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram: {text}")
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: {e}")


# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î ---
MYSQL_HOST = os.getenv("MYSQL_HOST", "localhost")
MYSQL_USER = os.getenv("MYSQL_USER", "root")
MYSQL_PASSWORD = os.getenv("MYSQL_PASSWORD", "")
MYSQL_DB = os.getenv("MYSQL_DATABASE", "crypto_db")

def get_connection():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MySQL."""
    return mysql.connector.connect(
        host=MYSQL_HOST,
        user=MYSQL_USER,
        password=MYSQL_PASSWORD,
        database=MYSQL_DB
    )

# --- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –∫ CoinGecko ---
COINGECKO_URL = (
    "https://pro-api.coingecko.com/api/v3/coins/markets"
    "?vs_currency=usd"
    "&category=made-in-usa"        # –∫–∞—Ç–µ–≥–æ—Ä–∏—è –º–æ–Ω–µ—Ç made-in-usa
    "&order=market_cap_desc"
    "&per_page=250"               # –¥–æ 250 –º–æ–Ω–µ—Ç
    "&sparkline=false"
    "&price_change_percentage=1h"
)

# –ï—Å–ª–∏ —É –≤–∞—Å CoinGecko Pro, –∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è API-–∫–ª—é—á, –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –µ–≥–æ –∏–∑ .env:
COINGECKO_API_KEY = os.getenv("COINGECKO_API_KEY", "")
HEADERS = {}
if COINGECKO_API_KEY:
    HEADERS = {"X-Cg-Pro-Api-Key": COINGECKO_API_KEY}

# --- –ü–æ—Ä–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –∏ –æ–±—ä—ë–º–∞ (–≤ %). –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ –∫–æ–¥–µ –∏–ª–∏ —á–µ—Ä–µ–∑ .env ---
PRICE_THRESHOLD_PERCENT = 3.0     # –ï—Å–ª–∏ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 3% –∏–ª–∏ –±–æ–ª—å—à–µ
VOLUME_THRESHOLD_PERCENT = 10.0   # –ï—Å–ª–∏ –æ–±—ä—ë–º –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ 10% –∏–ª–∏ –±–æ–ª—å—à–µ

def main():
    # 1) –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç CoinGecko
    try:
        response = requests.get(COINGECKO_URL, headers=HEADERS)
        response.raise_for_status()
        coins_data = response.json()  # —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç CoinGecko: {e}")
        return

    # 2) –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    conn = get_connection()
    cursor = conn.cursor(dictionary=True)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —á—Ç–µ–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    select_sql = """
        SELECT id, name, symbol, current_price_usd, total_volume_usd
        FROM coin_gesco_coins
        WHERE id = %s
        LIMIT 1
    """
    update_sql = """
        UPDATE coin_gesco_coins
           SET current_price_usd = %s,
               total_volume_usd = %s
         WHERE id = %s
    """

    # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å INSERT:
    insert_sql = """
        INSERT INTO coin_gesco_coins (id, name, symbol, current_price_usd, total_volume_usd)
        VALUES (%s, %s, %s, %s, %s)
    """

    # 3) –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –º–æ–Ω–µ—Ç—É –∏–∑ API (–¥–æ 250 —à—Ç—É–∫)
    for coin in coins_data:
        # –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã coin: {
        #   "id": "bitcoin",
        #   "symbol": "btc",
        #   "name": "Bitcoin",
        #   "current_price": 23123.12,
        #   "total_volume": 123456789, ...
        # }

        coingecko_id = coin.get("id")  # –°–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–º, —á—Ç–æ —Ö—Ä–∞–Ω–∏—Ç–µ –≤ coin_gesco_coins.id
        coin_name = coin.get("name")
        coin_symbol = coin.get("symbol")
        new_price = coin.get("current_price")
        new_volume = coin.get("total_volume")

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π
        if not coingecko_id or new_price is None or new_volume is None:
            continue

        # 3.1) –ò—â–µ–º –∑–∞–ø–∏—Å—å –≤ coin_gesco_coins –ø–æ PRIMARY KEY = coingecko_id
        cursor.execute(select_sql, (coingecko_id,))
        row = cursor.fetchone()

        if row is None:
            # –ù–µ—Ç –∑–∞–ø–∏—Å–∏ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Ö–æ—Ç–∏–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é.
            # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –¥–µ–ª–∞–µ–º INSERT.
            try:
                cursor.execute(insert_sql, (coingecko_id, coin_name, coin_symbol, new_price, new_volume))
                print(f"[INFO] –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –º–æ–Ω–µ—Ç–∞: {coin_name} ({coin_symbol}), id={coingecko_id}")
                # –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–∞–∫–æ–µ-—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:
                # send_telegram_message(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –º–æ–Ω–µ—Ç–∞ {coin_name} ({coin_symbol}) –≤ —Ç–∞–±–ª–∏—Ü—É.")
            except Exception as ex:
                print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –¥–ª—è {coingecko_id}: {ex}")
            continue

        # 4) –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏ –æ–±—ä—ë–º–∞
        old_price = row["current_price_usd"] or 0
        old_volume = row["total_volume_usd"] or 0

        price_diff_percent = 0.0
        volume_diff_percent = 0.0

        if old_price > 0:
            price_diff_percent = (new_price - old_price) / old_price * 100
        if old_volume > 0:
            volume_diff_percent = (new_volume - old_volume) / old_volume * 100

        # 4.1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å PRICE_THRESHOLD_PERCENT
        if abs(price_diff_percent) >= PRICE_THRESHOLD_PERCENT:
            if price_diff_percent > 0:
                # –†–æ—Å—Ç
                msg = (
                    f"üöÄ {coin_name} ({coin_symbol}) —Ü–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ "
                    f"{price_diff_percent:.2f}%. –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ ${new_price:.2f}"
                )
            else:
                # –ü–∞–¥–µ–Ω–∏–µ
                msg = (
                    f"üîª {coin_name} ({coin_symbol}) —Ü–µ–Ω–∞ —É–ø–∞–ª–∞ –Ω–∞ "
                    f"{abs(price_diff_percent):.2f}%. –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ ${new_price:.2f}"
                )
            send_telegram_message(msg)

        # 4.2) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—ä—ë–º–∞, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å VOLUME_THRESHOLD_PERCENT
        if abs(volume_diff_percent) >= VOLUME_THRESHOLD_PERCENT:
            if volume_diff_percent > 0:
                msg = (
                    f"{coin_name} ({coin_symbol}) –æ–±—ä—ë–º –≤—ã—Ä–æ—Å –Ω–∞ "
                    f"{volume_diff_percent:.2f}%. (–û–±—ä—ë–º: {new_volume})"
                )
            else:
                msg = (
                    f"{coin_name} ({coin_symbol}) –æ–±—ä—ë–º —É–ø–∞–ª –Ω–∞ "
                    f"{abs(volume_diff_percent):.2f}%. (–û–±—ä—ë–º: {new_volume})"
                )
            send_telegram_message(msg)

        # 5) –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
        try:
            cursor.execute(update_sql, (new_price, new_volume, coingecko_id))
        except Exception as ex:
            print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å {coingecko_id}: {ex}")

    # 6) –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    conn.commit()
    cursor.close()
    conn.close()


if __name__ == "__main__":
    main()